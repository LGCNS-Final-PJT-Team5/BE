name: Build and Push to ECR

on:
  push:
    branches:
      - main  # main 브랜치에 push 될 때 워크플로우 실행
      # - 2-cicd-setting # test용

env:
  AWS_REGION: ap-northeast-2
  IMAGE_TAG: ${{ github.sha }}
  APIGATEWAY_REGISTRY_URI: 211125408736.dkr.ecr.ap-northeast-2.amazonaws.com/modive/apigateway-service
  CONFIG_REGISTRY_URI: 211125408736.dkr.ecr.ap-northeast-2.amazonaws.com/modive/config-service
  DISCOVERY_REGISTRY_URI: 211125408736.dkr.ecr.ap-northeast-2.amazonaws.com/modive/service-discovery

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # AWS 인증 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 각 서비스별로 Docker 이미지 빌드 및 ECR에 푸시
      - name: Build and push Docker images for all services
        run: |
          echo "Building image for apigateway-service"
          docker build -t apigateway-service:${{ env.IMAGE_TAG }} ./apigateway-service
          docker tag apigateway-service:${{ env.IMAGE_TAG }} ${{ env.APIGATEWAY_REGISTRY_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.APIGATEWAY_REGISTRY_URI }}:${{ env.IMAGE_TAG }}

          echo "Building image for config-service"
          docker build -t config-service:${{ env.IMAGE_TAG }} ./config-service
          docker tag config-service:${{ env.IMAGE_TAG }} ${{ env.CONFIG_REGISTRY_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.CONFIG_REGISTRY_URI }}:${{ env.IMAGE_TAG }}

          echo "Building image for service-discovery"
          docker build -t service-discovery:${{ env.IMAGE_TAG }} ./service-discovery
          docker tag service-discovery:${{ env.IMAGE_TAG }} ${{ env.DISCOVERY_REGISTRY_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.DISCOVERY_REGISTRY_URI }}:${{ env.IMAGE_TAG }}
